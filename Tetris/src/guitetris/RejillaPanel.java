/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guitetris;

import data.*;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author manuel
 */
public class RejillaPanel extends javax.swing.JPanel {

    private TetrisFrame frame;
    private int anchoCelda=-1;
    
    
    /**
     * Creates new form RejillaPanel
     */
    public RejillaPanel() {
        initComponents();
    }
    
    public RejillaPanel(TetrisFrame fr){
        this();
        frame=fr;
    }
    
    public void dibujaRejilla(java.awt.Graphics g){
        int i,j;
        Rejilla rejilla=frame.getRejilla();
        int xoffset=(getWidth()-rejilla.getAnchura()*anchoCelda)/2;

        for(i=0;i<rejilla.getAnchura();i++){
            for(j=0;j<rejilla.getAltura();j++){
                
                    if(rejilla.getTipoCelda(i,j) == Rejilla.BLOQUE){
                    g.setColor(Color.BLUE);
                    g.drawRect(xoffset+i*anchoCelda,j*anchoCelda,anchoCelda,anchoCelda);
                    }
                    else if(rejilla.getTipoCelda(i,j) == Rejilla.PIEZA){
              
                    g.fillRect(xoffset+i*anchoCelda,j*anchoCelda,anchoCelda,anchoCelda);
                    
                    g.drawRect(xoffset+i*anchoCelda,j*anchoCelda,anchoCelda,anchoCelda);
                    }
                }
            
        }
    }

    
    void dibujaFigura(Figura fig,java.awt.Graphics g){

    if (fig!=null){
    Elemento elemento;
    Rejilla rejilla=frame.getRejilla();
    int xoffset=(getWidth()-rejilla.getAnchura()*anchoCelda)/2+fig.getXOrigen()*anchoCelda;
    int yoffset=fig.getYOrigen()*anchoCelda;
    for(int i=0;i<fig.getNElements();i++){
    elemento=fig.getElementAt(i);
    g.setColor(fig.getColor());
    g.fillRect(xoffset+elemento.getColumna()*anchoCelda,yoffset+elemento.getFila()*anchoCelda,anchoCelda,anchoCelda);
    g.setColor(Color.WHITE);
    g.drawRect(xoffset+elemento.getColumna()*anchoCelda,yoffset+elemento.getFila()*anchoCelda,anchoCelda,anchoCelda);
        
    
      }
    }
    
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g); //To change body of generated methods, choose Tools | Templates.
        if(anchoCelda==-1){
        anchoCelda=Math.min(getWidth()/frame.getRejilla().getAnchura(),(getHeight()-10)/frame.getRejilla().getAltura());
        }
        g.setColor(Color.WHITE);
        g.fillRect(0,0,getWidth(),getHeight());
        dibujaRejilla(g);
        dibujaFigura(frame.getFigura(), g);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setPreferredSize(new java.awt.Dimension(200, 400));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RejillaPanel.this.mouseEntered(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RejillaPanel.this.keyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void keyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keyPressed
    
        if (evt.getKeyCode() == KeyEvent.VK_LEFT){
            if(!frame.getRejilla().seChoca(frame.getFigura(),Figura.IZQUIERDA)){
            frame.getFigura().mueve(Figura.IZQUIERDA);
            if(frame.getPanel()!=null)
            frame.getPanel().repaint();
            }
            }
        else if (evt.getKeyCode() == KeyEvent.VK_RIGHT){
            if(!frame.getRejilla().seChoca(frame.getFigura(),Figura.DERECHA)){
            frame.getFigura().mueve(Figura.DERECHA);
            if(frame.getPanel()!=null)
            frame.getPanel().repaint();
            }
        }
        else if (evt.getKeyCode() == KeyEvent.VK_UP){
            frame.getFigura().rotar(frame.getRejilla());
            if(frame.getPanel()!=null)
            frame.getPanel().repaint();
        }
        else if (evt.getKeyCode() == KeyEvent.VK_DOWN){
            if(!frame.getRejilla().seChoca(frame.getFigura(),Figura.ABAJO)){
            frame.getFigura().mueve(Figura.ABAJO);
            if(frame.getPanel()!=null)
            frame.getPanel().repaint();
            }
        }
            
    }//GEN-LAST:event_keyPressed

    private void mouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseEntered
        requestFocus();
    }//GEN-LAST:event_mouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
